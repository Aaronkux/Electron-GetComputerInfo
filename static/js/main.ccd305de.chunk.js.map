{"version":3,"sources":["App.tsx","index.tsx"],"names":["ipcRenderer","window","require","App","useState","info","setInfo","loading","setLoading","useEffect","on","event","className","onClick","send","cpuInfo","systemVersion","computerName","memorySize","disksInfo","map","diskInfo","graphicsInfo","graphics","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAEQA,G,MAAgBC,OAAOC,QAAQ,YAA/BF,aAyDOG,EA/CH,WAAO,IAAD,MACQC,mBAA2B,IADnC,mBACTC,EADS,KACHC,EADG,OAEcF,oBAAS,GAFvB,mBAETG,EAFS,KAEAC,EAFA,KAShB,OANAC,qBAAU,WACRT,EAAYU,GAAG,uBAAuB,SAACC,EAAON,GAC5CC,EAAQD,GACRG,GAAW,QAEZ,IAED,qBAAKI,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,wBACEC,QAAS,WACPb,EAAYc,KAAK,qBACjBN,GAAW,IAHf,8DAQA,8BACID,EAkBA,wBAjBAF,EAAKU,QACH,eAAC,WAAD,WACE,4BAAoBV,EAAKU,SAAjB,WACR,4BAA0BV,EAAKW,eAAvB,iBACR,4BAAyBX,EAAKY,cAAtB,gBACR,4BAAuBZ,EAAKa,YAApB,cAJV,UAKGb,EAAKc,iBALR,aAKG,EAAgBC,KAAI,SAACC,GAAD,OACnB,4BAAmBA,GAAXA,MANZ,UAQGhB,EAAKiB,oBARR,aAQG,EAAmBF,KAAI,SAACG,GAAD,OACtB,4BAAmBA,GAAXA,SAIZ,4CC3CdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ccd305de.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport \"./App.css\";\nconst { ipcRenderer } = window.require(\"electron\");\n\ninterface ComputerInfoType {\n  cpuInfo?: string;\n  systemVersion?: string;\n  computerName?: string;\n  memorySize?: string;\n  disksInfo?: string[];\n  graphicsInfo?: string[];\n}\nconst App = () => {\n  const [info, setInfo] = useState<ComputerInfoType>({});\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    ipcRenderer.on(\"reply-computer-info\", (event, info: ComputerInfoType) => {\n      setInfo(info);\n      setLoading(false)\n    });\n  }, []);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button\n          onClick={() => {\n            ipcRenderer.send(\"get-computer-info\");\n            setLoading(true)\n          }}\n        >\n          点击获取电脑信息\n        </button>\n        <div>\n          {!loading ? (\n            info.cpuInfo ? (\n              <Fragment>\n                <p key={\"cpuInfo\"}>{info.cpuInfo}</p>\n                <p key={\"systemVersion\"}>{info.systemVersion}</p>\n                <p key={\"computerName\"}>{info.computerName}</p>\n                <p key={\"memorySize\"}>{info.memorySize}</p>\n                {info.disksInfo?.map((diskInfo) => (\n                  <p key={diskInfo}>{diskInfo}</p>\n                ))}\n                {info.graphicsInfo?.map((graphics) => (\n                  <p key={graphics}>{graphics}</p>\n                ))}\n              </Fragment>\n            ) : (\n              \"Click to get computer information\"\n            )\n          ) : (\n            \"Computer Info Loading\"\n          )}\n        </div>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}